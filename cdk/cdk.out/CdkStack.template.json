{
  "Resources": {
    "cdkbusinfo2C2CF86C": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "Tags": [
          {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true"
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "CdkStack/cdk-businfo/Resource"
      }
    },
    "cdkbusinfoPolicy3C8DD22A": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "cdkbusinfo2C2CF86C"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*"
              ],
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "cdkbusinfo2C2CF86C",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "cdkbusinfo2C2CF86C",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/cdk-businfo/Policy/Resource"
      }
    },
    "cdkbusinfoAutoDeleteObjectsCustomResource10187216": {
      "Type": "Custom::S3AutoDeleteObjects",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "cdkbusinfo2C2CF86C"
        }
      },
      "DependsOn": [
        "cdkbusinfoPolicy3C8DD22A"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "CdkStack/cdk-businfo/AutoDeleteObjectsCustomResource/Default"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
      }
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "483ae06ed27ef8ca76e011264d772420593a6cfe8544759c306ef3b98c9e25be.zip"
        },
        "Timeout": 900,
        "MemorySize": 128,
        "Handler": "__entrypoint__.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Description": {
          "Fn::Join": [
            "",
            [
              "Lambda function for auto-deleting objects in ",
              {
                "Ref": "cdkbusinfo2C2CF86C"
              },
              " S3 bucket."
            ]
          ]
        }
      },
      "DependsOn": [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
        "aws:asset:path": "asset.483ae06ed27ef8ca76e011264d772420593a6cfe8544759c306ef3b98c9e25be",
        "aws:asset:property": "Code"
      }
    },
    "Stream790BDEE4": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "Name": "businfo",
        "RetentionPeriodHours": 48,
        "StreamEncryption": {
          "Fn::If": [
            "AwsCdkKinesisEncryptedStreamsUnsupportedRegions",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "EncryptionType": "KMS",
              "KeyId": "alias/aws/kinesis"
            }
          ]
        },
        "StreamModeDetails": {
          "StreamMode": "ON_DEMAND"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/Stream/Resource"
      }
    },
    "dynamodbbusinfo7FC290DB": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "RouteId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "Timestamp",
            "KeyType": "RANGE"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "RouteId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "Timestamp",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KinesisStreamSpecification": {
          "StreamArn": {
            "Fn::GetAtt": [
              "Stream790BDEE4",
              "Arn"
            ]
          }
        },
        "TableName": "dynamodb-businfo"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "CdkStack/dynamodb-businfo/Resource"
      }
    },
    "KinesisInfoServiceRoleD1C59497": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/KinesisInfo/ServiceRole/Resource"
      }
    },
    "KinesisInfoServiceRoleDefaultPolicy5F52CFDF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "kinesis:DescribeStreamSummary",
                "kinesis:GetRecords",
                "kinesis:GetShardIterator",
                "kinesis:ListShards",
                "kinesis:SubscribeToShard",
                "kinesis:DescribeStream",
                "kinesis:ListStreams"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Stream790BDEE4",
                  "Arn"
                ]
              }
            },
            {
              "Action": "kinesis:DescribeStream",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "Stream790BDEE4",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "KinesisInfoServiceRoleDefaultPolicy5F52CFDF",
        "Roles": [
          {
            "Ref": "KinesisInfoServiceRoleD1C59497"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/KinesisInfo/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "KinesisInfoB4619679": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "eca8a647bbbecb2002fc89abf2171af1addde39c6caab1269df815edcad0edba.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "KinesisInfoServiceRoleD1C59497",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 3
      },
      "DependsOn": [
        "KinesisInfoServiceRoleDefaultPolicy5F52CFDF",
        "KinesisInfoServiceRoleD1C59497"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkStack/KinesisInfo/Resource",
        "aws:asset:path": "asset.eca8a647bbbecb2002fc89abf2171af1addde39c6caab1269df815edcad0edba",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "KinesisInfoKinesisEventSourceCdkStackStream937EB6F065BBFCF4": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "FunctionName": {
          "Ref": "KinesisInfoB4619679"
        },
        "BatchSize": 100,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "Stream790BDEE4",
            "Arn"
          ]
        },
        "StartingPosition": "TRIM_HORIZON"
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/KinesisInfo/KinesisEventSource:CdkStackStream937EB6F0/Resource"
      }
    },
    "LambdaBusInfoServiceRole087CB63A": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/LambdaBusInfo/ServiceRole/Resource"
      }
    },
    "LambdaBusInfoServiceRoleDefaultPolicyBD52A92C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "dynamodbbusinfo7FC290DB",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LambdaBusInfoServiceRoleDefaultPolicyBD52A92C",
        "Roles": [
          {
            "Ref": "LambdaBusInfoServiceRole087CB63A"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/LambdaBusInfo/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "LambdaBusInfo148F31F9": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "f4fd355979e36556faed0d86c65ead6e813a5036fff3ef55a2ee3484f2088a11.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaBusInfoServiceRole087CB63A",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "tableName": "dynamodb-businfo"
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 10
      },
      "DependsOn": [
        "LambdaBusInfoServiceRoleDefaultPolicyBD52A92C",
        "LambdaBusInfoServiceRole087CB63A"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkStack/LambdaBusInfo/Resource",
        "aws:asset:path": "asset.f4fd355979e36556faed0d86c65ead6e813a5036fff3ef55a2ee3484f2088a11",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "CronA79E22A9": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "Schedule a Lambda to save arrival time of buses",
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "LambdaBusInfo148F31F9",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/Cron/Resource"
      }
    },
    "CronAllowEventRuleCdkStackLambdaBusInfo6DA6B5A8B73586AA": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaBusInfo148F31F9",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "CronA79E22A9",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/Cron/AllowEventRuleCdkStackLambdaBusInfo6DA6B5A8"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/21RTU/DMAz9Ldyz8DEhzqxiN0TVcZ/SxExem6SKk6Kpyn8nH2UTEqf37Bc/O/YTf3zhD3fimzZSDZsRe74cvJADS6njQlu+7IIcwLPmy6ysQmtHlJdbeo1rsBMEkQ1ogJCyowOh89vKIlMXI7RVqdun6EfIUiGRjUL3SvBlH4z0aE2WrvxtBuMPNjgJ72Ka0Jyy/H+2BaeRKJVFhkLzpbO1UcHb+JVFRtujIAJP/DUDg+yahu/CWpYwRtYE8lZ3QKVfEa78j9Q6O6MCx4pdWuppHewj+CmUhTbWKCwf+y2KzFgF/Ez3czrMczrNmRA3LhiPGnhX8QfJfV2StgEAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "bucketName": {
      "Description": "The nmae of bucket",
      "Value": {
        "Ref": "cdkbusinfo2C2CF86C"
      }
    }
  },
  "Conditions": {
    "AwsCdkKinesisEncryptedStreamsUnsupportedRegions": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region"
            },
            "cn-north-1"
          ]
        },
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region"
            },
            "cn-northwest-1"
          ]
        }
      ]
    },
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}